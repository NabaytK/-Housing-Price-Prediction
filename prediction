import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# ðŸ”¹ Step 1: Load Dataset
df = pd.read_csv("housing.csv")
print(df.head())  # Display first 5 rows
print(df.info())  # Check for missing values and data types

# ðŸ”¹ Step 2: Handle Missing Values
df.dropna(inplace=True)

# ðŸ”¹ Step 3: Convert Categorical Variable ("ocean_proximity") to Numeric
df = pd.get_dummies(df, columns=['ocean_proximity'], drop_first=True)

# ðŸ”¹ Step 4: Define Features (X) and Target (y)
X = df.drop("median_house_value", axis=1)
y = df["median_house_value"]

# ðŸ”¹ Step 5: Train-Test Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# ðŸ”¹ Step 6: Train Linear Regression Model
model = LinearRegression()
model.fit(X_train, y_train)

# ðŸ”¹ Step 7: Make Predictions
y_pred = model.predict(X_test)

# ðŸ”¹ Step 8: Evaluate Model Performance
rmse = mean_squared_error(y_test, y_pred, squared=False)
r2 = r2_score(y_test, y_pred)
print(f"RMSE: {rmse}")
print(f"RÂ² Score: {r2}")

# ðŸ”¹ Step 9: Visualizing Predictions vs Actual
plt.figure(figsize=(8,6))
sns.scatterplot(x=y_test, y=y_pred)
plt.xlabel("Actual Prices")
plt.ylabel("Predicted Prices")
plt.title("Actual vs Predicted House Prices")
plt.show()
